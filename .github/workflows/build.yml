name: Build image

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  schedule:
    - cron: '3 4 * * 5'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      packages: write
    env:
      IMAGE_NAME: 'ghcr.io/${{ github.repository }}'
      TRIVY_SARIF: 'trivy-results.sarif'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: 'ghcr.io'
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image with cache and push to registry
        uses: docker/build-push-action@v6
        with:
          push: 'true'
          tags: "${{ env.IMAGE_NAME }}:${{ github.sha }}${{ (github.event_name == 'push' && github.ref == 'refs/heads/master') && format(',{0}:latest', env.IMAGE_NAME) || '' }}"
          cache-from: 'type=registry,ref=${{ env.IMAGE_NAME }}:latest'
          cache-to: 'type=inline'

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: '${{ env.IMAGE_NAME }}:${{ github.sha }}'
          format: 'sarif'
          exit-code: '0'
          output: ${{ env.TRIVY_SARIF }}
        env:
          TRIVY_DB_REPOSITORY: 'public.ecr.aws/aquasecurity/trivy-db:2'
          TRIVY_JAVA_DB_REPOSITORY: 'public.ecr.aws/aquasecurity/trivy-java-db:1'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ env.TRIVY_SARIF }}
          category: 'Trivy'
